name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npm run type-check

      - name: Check translations
        run: npm run i18n:validate

      - name: Check formatting
        run: npm run format:check

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test -- --run

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: frontend

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: NPM Audit
        run: npm audit --audit-level=critical

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@v3.88.0
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  build:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Check bundle size
        run: |
          echo "Bundle Analysis:"
          shopt -s nullglob
          js_files=(dist/assets/*.js)

          if [ ${#js_files[@]} -eq 0 ]; then
            echo "No JavaScript files found in dist/assets/"
            exit 0
          fi

          ls -lh dist/assets/*.js | head -10

          # Check if any chunk exceeds 500KB
          LIMIT_BYTES=512000
          for file in "${js_files[@]}"; do
            size=$(stat -c%s "$file" 2>/dev/null || stat -f%z "$file" 2>/dev/null || echo 0)
            if [ "$size" -gt "$LIMIT_BYTES" ]; then
              filename=$(basename "$file")
              limit_kb=$((LIMIT_BYTES / 1024))
              size_kb=$((size / 1024))
              echo "Warning: $filename exceeds ${limit_kb}KB limit (${size_kb}KB)"
            fi
          done
