# Docker ignore file - Optimized for smaller build context
# This significantly speeds up builds by not sending unnecessary files to Docker daemon

# Version control
.git
.gitignore
.gitattributes

# Documentation
*.md
docs/
LICENSE
CHANGELOG*

# Development files
.env*
!.env.example
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# Node modules and caches
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm/
.yarn/
.pnp.*

# Build outputs
dist/
build/
out/
*.log

# Test files
coverage/
.nyc_output/
test-results/
e2e/
**/__tests__/
**/*.test.*
**/*.spec.*
# But keep tsconfig files
!tsconfig*.json

# Python cache
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
.pytest_cache/
.coverage
htmlcov/
.tox/
.hypothesis/

# ML model weights (if stored locally)
*.pth
*.h5
*.ckpt
models/weights/

# Temporary files
tmp/
temp/
*.tmp
*.temp
*.bak
*.backup
*.old

# Docker-related
docker-compose.*.yml
!docker-compose.yml
Dockerfile*
!Dockerfile
.dockerignore

# CI/CD
.github/
.gitlab-ci.yml
.travis.yml
jenkins/

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
pnpm-debug.log*

# Database files
*.sqlite
*.sqlite3
*.db
data/

# Upload directories (should be volumes)
uploads/
public/uploads/

# OS files
Thumbs.db
.DS_Store
.AppleDouble
.LSOverride

# IDE specific
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Build scripts (not needed in container)
scripts/
!scripts/*.sh

# Backup files
backups/
*.backup
*.bak

# Large media files
*.mp4
*.avi
*.mov
*.zip
*.tar.gz
*.rar